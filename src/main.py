# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 443)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.main_tab = QtWidgets.QTabWidget(self.centralwidget)
        self.main_tab.setGeometry(QtCore.QRect(0, 0, 501, 421))
        self.main_tab.setObjectName("main_tab")
        self.led_resistor = QtWidgets.QWidget()
        self.led_resistor.setObjectName("led_resistor")
        self.led_type = QtWidgets.QComboBox(self.led_resistor)
        self.led_type.setGeometry(QtCore.QRect(120, 90, 69, 22))
        self.led_type.setObjectName("led_type")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.led_type.addItem("")
        self.no_led = QtWidgets.QLabel(self.led_resistor)
        self.no_led.setGeometry(QtCore.QRect(20, 50, 97, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.no_led.setFont(font)
        self.no_led.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.no_led.setObjectName("no_led")
        self.led_count = QtWidgets.QSpinBox(self.led_resistor)
        self.led_count.setGeometry(QtCore.QRect(120, 50, 41, 31))
        self.led_count.setObjectName("led_count")
        self.led_color = QtWidgets.QLabel(self.led_resistor)
        self.led_color.setGeometry(QtCore.QRect(40, 80, 71, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.led_color.setFont(font)
        self.led_color.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.led_color.setObjectName("led_color")
        self.led_cir = QtWidgets.QLabel(self.led_resistor)
        self.led_cir.setGeometry(QtCore.QRect(210, 80, 141, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.led_cir.setFont(font)
        self.led_cir.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.led_cir.setObjectName("led_cir")
        self.par_ser = QtWidgets.QComboBox(self.led_resistor)
        self.par_ser.setGeometry(QtCore.QRect(360, 90, 69, 22))
        self.par_ser.setObjectName("par_ser")
        self.par_ser.addItem("")
        self.par_ser.addItem("")
        self.result = QtWidgets.QPlainTextEdit(self.led_resistor)
        self.result.setGeometry(QtCore.QRect(30, 240, 431, 71))
        font = QtGui.QFont()
        font.setFamily("Mj_Beirut")
        self.result.setFont(font)
        self.result.setObjectName("result")
        self.calculate = QtWidgets.QPushButton(self.led_resistor)
        self.calculate.setGeometry(QtCore.QRect(170, 160, 121, 71))
        font = QtGui.QFont()
        font.setFamily("Mj_Beirut Heading")
        font.setPointSize(11)
        self.calculate.setFont(font)
        self.calculate.setObjectName("calculate")
        self.calculate.clicked.connect(self.press_calculate)
        
        self.voltage = QtWidgets.QLabel(self.led_resistor)
        self.voltage.setGeometry(QtCore.QRect(210, 50, 71, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.voltage.setFont(font)
        self.voltage.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.voltage.setObjectName("voltage")
        self.voltage_input = QtWidgets.QPlainTextEdit(self.led_resistor)
        self.voltage_input.setGeometry(QtCore.QRect(290, 50, 61, 31))
        self.voltage_input.setObjectName("voltage_input")
        self.voltage_unit = QtWidgets.QLabel(self.led_resistor)
        self.voltage_unit.setGeometry(QtCore.QRect(360, 50, 21, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.voltage_unit.setFont(font)
        self.voltage_unit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.voltage_unit.setObjectName("voltage_unit")
        self.main_tab.addTab(self.led_resistor, "")
        self.res_watt = QtWidgets.QWidget()
        self.res_watt.setObjectName("res_watt")
        self.power = QtWidgets.QPlainTextEdit(self.res_watt)
        self.power.setGeometry(QtCore.QRect(30, 220, 431, 71))
        font = QtGui.QFont()
        font.setFamily("Mj_Beirut")
        font.setPointSize(12)
        self.power.setFont(font)
        self.power.setObjectName("power")
        self.current = QtWidgets.QLabel(self.res_watt)
        self.current.setGeometry(QtCore.QRect(210, 40, 161, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.current.setFont(font)
        self.current.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.current.setObjectName("current")
        self.current_input_ = QtWidgets.QPlainTextEdit(self.res_watt)
        self.current_input_.setGeometry(QtCore.QRect(380, 40, 61, 31))
        self.current_input_.setObjectName("current_input_")
        self.current_unit = QtWidgets.QLabel(self.res_watt)
        self.current_unit.setGeometry(QtCore.QRect(450, 40, 31, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.current_unit.setFont(font)
        self.current_unit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.current_unit.setObjectName("current_unit")
        self.calculate_pow = QtWidgets.QPushButton(self.res_watt)
        self.calculate_pow.setGeometry(QtCore.QRect(180, 140, 121, 71))
        font = QtGui.QFont()
        font.setFamily("Mj_Beirut Heading")
        font.setPointSize(11)
        self.calculate_pow.setFont(font)
        self.calculate_pow.setObjectName("calculate_pow")
        self.calculate_pow.clicked.connect(self.press_power_calculation)
        
        self.voltage_unit_3 = QtWidgets.QLabel(self.res_watt)
        self.voltage_unit_3.setGeometry(QtCore.QRect(140, 40, 51, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.voltage_unit_3.setFont(font)
        self.voltage_unit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.voltage_unit_3.setObjectName("voltage_unit_3")
        self.res_vol_2 = QtWidgets.QLabel(self.res_watt)
        self.res_vol_2.setGeometry(QtCore.QRect(10, 40, 51, 33))
        font = QtGui.QFont()
        font.setFamily("B Titr")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.res_vol_2.setFont(font)
        self.res_vol_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.res_vol_2.setObjectName("res_vol_2")
        self.voltage_input_power_2 = QtWidgets.QPlainTextEdit(self.res_watt)
        self.voltage_input_power_2.setGeometry(QtCore.QRect(70, 40, 61, 31))
        self.voltage_input_power_2.setObjectName("voltage_input_power_2")
        self.main_tab.addTab(self.res_watt, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.main_tab.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VerySimpleElectronicAssistant"))
        self.led_type.setItemText(0, _translate("MainWindow", "قرمز"))
        self.led_type.setItemText(1, _translate("MainWindow", "آبی"))
        self.led_type.setItemText(2, _translate("MainWindow", "زرد"))
        self.led_type.setItemText(3, _translate("MainWindow", "سبز"))
        self.led_type.setItemText(4, _translate("MainWindow", "صورتی"))
        self.led_type.setItemText(5, _translate("MainWindow", "سفید"))
        self.led_type.setItemText(6, _translate("MainWindow", "مادورن قرمز"))
        self.led_type.setItemText(7, _translate("MainWindow", "ماورا بنفش"))
        self.no_led.setText(_translate("MainWindow", "<html><head/><body><p>ها LED تعداد</p></body></html>"))
        self.led_color.setText(_translate("MainWindow", "<html><head/><body><p>LED رنگ</p></body></html>"))
        self.led_cir.setText(_translate("MainWindow", "<html><head/><body><p>ها LED نوع چیدمان</p></body></html>"))
        self.par_ser.setItemText(0, _translate("MainWindow", "سری"))
        self.par_ser.setItemText(1, _translate("MainWindow", "موازی"))
        self.calculate.setText(_translate("MainWindow", "محاسبه"))
        self.voltage.setText(_translate("MainWindow", "<html><head/><body><p>ولتاژ مدار</p></body></html>"))
        self.voltage_unit.setText(_translate("MainWindow", "<html><head/><body><p>v</p></body></html>"))
        self.main_tab.setTabText(self.main_tab.indexOf(self.led_resistor), _translate("MainWindow", "LED مقاومت"))
        self.current.setText(_translate("MainWindow", "<html><head/><body><p>جریان عبوری از مقاومت</p></body></html>"))
        self.current_unit.setText(_translate("MainWindow", "<html><head/><body><p>mA</p></body></html>"))
        self.calculate_pow.setText(_translate("MainWindow", "محاسبه"))
        self.voltage_unit_3.setText(_translate("MainWindow", "<html><head/><body><p>Ohm</p></body></html>"))
        self.res_vol_2.setText(_translate("MainWindow", "<html><head/><body><p>مقاومت</p></body></html>"))
        self.main_tab.setTabText(self.main_tab.indexOf(self.res_watt), _translate("MainWindow", "توان مقاومت"))

    def press_calculate(self):
        r = int(led_resistor_calculatin() * 1000)
        if(r > 0):
            res = 'مقاومت پیشنهادی برای بهترین روشنایی = ' + str(r) + ' اهم'
            res = res + '\nاگر مقاومت پیشنهادی داخل رنج نیست'
            res = res + '\nلطفا اولین مقاومت داخل رنج بعد از مقاومت پیشنهادی را برگزینید'
            self.result.setPlainText(res)
        elif(r <= 0):
            res = 'ولتاژ فوروارد LED مدنظر شما از ولتاژ ورودی بیشتر است!'
            res = res + '\nمی توانید هیچ مقاومتی در مدار قرار ندهید'
            self.result.setPlainText(res)
        else:
            pass
    def press_power_calculation(self):
        p = int(power_calculation())
        res = 'حداقل توان موردنیاز برای این مقاومت ' + str(p) + ' میلی وات می باشد'
        self.power.setPlainText(res)

def led_resistor_calculatin():
    resistor = 0
    vf = 0
    I = 20
    
    if((ui.voltage_input.toPlainText()) == ""):
        ui.result.setPlainText("ولتاژ نمی تواند خالی باشد")
        return 0
    else:    
        vs = float(ui.voltage_input.toPlainText())
    
    
    led_col = ui.led_type.currentIndex()
    led_cir_type = ui.par_ser.currentIndex()
    led_number = ui.led_count.value();
    if(led_number == 0):
        ui.result.setPlainText("تعداد LED ها را وارد کنید")
        return 0
    
    if(led_col == 0):
        vf = 1.8
    elif(led_col == 1):
        vf = 3.2
    elif(led_col == 2):
        vf = 2.1
    elif(led_col == 3):
        vf = 2.2
    elif(led_col == 4):
        vf = 3.2
    elif(led_col == 5):
        vf = 3.2
    elif(led_col == 6):
        vf = 1.2
    elif(led_col == 7):
        vf = 3.2
        
    if(led_cir_type == 0):
        vf = vf * led_number 
        I = 20
    else:
        vf = vf * 1
        I = 20 * led_number
        
        
    resistor = (vs - vf) / I
    print(resistor)
    return resistor

def power_calculation():
    power = 0
    
    cir_res = ui.voltage_input_power_2.toPlainText()
    cir_cur = ui.current_input_.toPlainText() 
    
    if((cir_res == "") or (cir_cur == "")):
        ui.power.setPlainText("لطفا همه پارامترها را وارد کنید")
        return 0
    
    cir_res = float(cir_res)
    cir_cur = float(cir_cur)
    
    power = cir_res * cir_cur * cir_cur
    
    return power



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
